"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ACTION_PREFIX = void 0;
// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
var ACTION_PREFIX = '@@kepler.gl/';
/**
 * Kepler.gl action types, can be listened by reducers to perform additional tasks whenever an action is called in kepler.gl
 * @constant
 * @type {Object}
 * @public
 *
 * @example
 * // store.js
 * import {handleActions} from 'redux-actions';
 * import {createStore, combineReducers, applyMiddleware} from 'redux';
 * import {taskMiddleware} from 'react-palm/tasks';
 *
 * import keplerGlReducer from 'kepler.gl/reducers';
 * import {ActionTypes} from 'kepler.gl/actions';
 *
 * const appReducer = handleActions({
 *   // listen on kepler.gl map update action to store a copy of viewport in app state
 *   [ActionTypes.UPDATE_MAP]: (state, action) => ({
 *     ...state,
 *     viewport: action.payload
 *   }),
 * }, {});
 *
 * const reducers = combineReducers({
 *   app: appReducer,
 *   keplerGl: keplerGlReducer
 * });
 *
 * export default createStore(reducers, {}, applyMiddleware(taskMiddleware))
 */

exports.ACTION_PREFIX = ACTION_PREFIX;
var ActionTypes = {
  // identity action
  REGISTER_ENTRY: "".concat(ACTION_PREFIX, "REGISTER_ENTRY"),
  DELETE_ENTRY: "".concat(ACTION_PREFIX, "DELETE_ENTRY"),
  RENAME_ENTRY: "".concat(ACTION_PREFIX, "RENAME_ENTRY"),
  // visState
  ADD_DATA: "".concat(ACTION_PREFIX, "ADD_DATA"),
  ADD_FILTER: "".concat(ACTION_PREFIX, "ADD_FILTER"),
  ADD_LAYER: "".concat(ACTION_PREFIX, "ADD_LAYER"),
  INTERACTION_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "INTERACTION_CONFIG_CHANGE"),
  LAYER_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "LAYER_CONFIG_CHANGE"),
  LAYER_VISUAL_CHANNEL_CHANGE: "".concat(ACTION_PREFIX, "LAYER_VISUAL_CHANNEL_CHANGE"),
  LAYER_TYPE_CHANGE: "".concat(ACTION_PREFIX, "LAYER_TYPE_CHANGE"),
  LAYER_VIS_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "LAYER_VIS_CONFIG_CHANGE"),
  LAYER_TEXT_LABEL_CHANGE: "".concat(ACTION_PREFIX, "LAYER_TEXT_LABEL_CHANGE"),
  LAYER_HOVER: "".concat(ACTION_PREFIX, "LAYER_HOVER"),
  LAYER_CLICK: "".concat(ACTION_PREFIX, "LAYER_CLICK"),
  MAP_CLICK: "".concat(ACTION_PREFIX, "MAP_CLICK"),
  MOUSE_MOVE: "".concat(ACTION_PREFIX, "MOUSE_MOVE"),
  REMOVE_FILTER: "".concat(ACTION_PREFIX, "REMOVE_FILTER"),
  REMOVE_LAYER: "".concat(ACTION_PREFIX, "REMOVE_LAYER"),
  REMOVE_DATASET: "".concat(ACTION_PREFIX, "REMOVE_DATASET"),
  REORDER_LAYER: "".concat(ACTION_PREFIX, "REORDER_LAYER"),
  SET_FILTER: "".concat(ACTION_PREFIX, "SET_FILTER"),
  SHOW_DATASET_TABLE: "".concat(ACTION_PREFIX, "SHOW_DATASET_TABLE"),
  UPDATE_LAYER_BLENDING: "".concat(ACTION_PREFIX, "UPDATE_LAYER_BLENDING"),
  UPDATE_VIS_DATA: "".concat(ACTION_PREFIX, "UPDATE_VIS_DATA"),
  TOGGLE_FILTER_ANIMATION: "".concat(ACTION_PREFIX, "TOGGLE_FILTER_ANIMATION"),
  UPDATE_FILTER_ANIMATION_SPEED: "".concat(ACTION_PREFIX, "UPDATE_FILTER_ANIMATION_SPEED"),
  PLAY_ANIMATION: "".concat(ACTION_PREFIX, "PLAY_ANIMATION"),
  UPDATE_ANIMATION_TIME: "".concat(ACTION_PREFIX, "UPDATE_ANIMATION_TIME"),
  UPDATE_ANIMATION_SPEED: "".concat(ACTION_PREFIX, "UPDATE_ANIMATION_SPEED"),
  UPDATE_LAYER_ANIMATION_SPEED: "".concat(ACTION_PREFIX, "UPDATE_LAYER_ANIMATION_SPEED"),
  TOGGLE_LAYER_CONFIG_ACTIVE: "".concat(ACTION_PREFIX, "TOGGLE_LAYER_CONFIG_ACTIVE"),
  ENLARGE_FILTER: "".concat(ACTION_PREFIX, "ENLARGE_FILTER"),
  TOGGLE_FILTER_FEATURE: "".concat(ACTION_PREFIX, "TOGGLE_FILTER_FEATURE"),
  TOGGLE_LAYER_FOR_MAP: "".concat(ACTION_PREFIX, "TOGGLE_LAYER_FOR_MAP"),
  SET_FILTER_PLOT: "".concat(ACTION_PREFIX, "SET_FILTER_PLOT"),
  LOAD_FILES: "".concat(ACTION_PREFIX, "LOAD_FILES"),
  LOAD_NEXT_FILE: "".concat(ACTION_PREFIX, "LOAD_NEXT_FILE"),
  LOAD_FILES_ERR: "".concat(ACTION_PREFIX, "LOAD_FILES_ERR"),
  LOAD_FILES_SUCCESS: "".concat(ACTION_PREFIX, "LOAD_FILES_SUCCESS"),
  LAYER_COLOR_UI_CHANGE: "".concat(ACTION_PREFIX, "LAYER_COLOR_UI_CHANGE"),
  TOGGLE_FEATURE_LAYER: "".concat(ACTION_PREFIX, "TOGGLE_FEATURE_LAYER"),
  APPLY_CPU_FILTER: "".concat(ACTION_PREFIX, "APPLY_CPU_FILTER"),
  SET_MAP_INFO: "".concat(ACTION_PREFIX, "SET_MAP_INFO"),
  SORT_TABLE_COLUMN: "".concat(ACTION_PREFIX, "SORT_TABLE_COLUMN"),
  PIN_TABLE_COLUMN: "".concat(ACTION_PREFIX, "PIN_TABLE_COLUMN"),
  COPY_TABLE_COLUMN: "".concat(ACTION_PREFIX, "COPY_TABLE_COLUMN"),
  // mapState
  UPDATE_MAP: "".concat(ACTION_PREFIX, "UPDATE_MAP"),
  FIT_BOUNDS: "".concat(ACTION_PREFIX, "FIT_BOUNDS"),
  TOGGLE_PERSPECTIVE: "".concat(ACTION_PREFIX, "TOGGLE_PERSPECTIVE"),
  TOGGLE_SPLIT_MAP: "".concat(ACTION_PREFIX, "TOGGLE_SPLIT_MAP"),
  TOGGLE_FULLSCREEN: "".concat(ACTION_PREFIX, "TOGGLE_FULLSCREEN"),
  // mapStyle
  MAP_CONFIG_CHANGE: "".concat(ACTION_PREFIX, "MAP_CONFIG_CHANGE"),
  SET_DEFAULT_MAP_STYLE: "".concat(ACTION_PREFIX, "SET_DEFAULT_MAP_STYLE"),
  MAP_STYLE_CHANGE: "".concat(ACTION_PREFIX, "MAP_STYLE_CHANGE"),
  LOAD_MAP_STYLES: "".concat(ACTION_PREFIX, "LOAD_MAP_STYLES"),
  LOAD_MAP_STYLE_ERR: "".concat(ACTION_PREFIX, "LOAD_MAP_STYLE_ERR"),
  INPUT_MAP_STYLE: "".concat(ACTION_PREFIX, "INPUT_MAP_STYLE"),
  LOAD_CUSTOM_MAP_STYLE: "".concat(ACTION_PREFIX, "LOAD_CUSTOM_MAP_STYLE"),
  ADD_CUSTOM_MAP_STYLE: "".concat(ACTION_PREFIX, "ADD_CUSTOM_MAP_STYLE"),
  REQUEST_MAP_STYLES: "".concat(ACTION_PREFIX, "REQUEST_MAP_STYLES"),
  SET_3D_BUILDING_COLOR: "".concat(ACTION_PREFIX, "SET_3D_BUILDING_COLOR"),
  // uiState
  TOGGLE_SIDE_PANEL: "".concat(ACTION_PREFIX, "TOGGLE_SIDE_PANEL"),
  TOGGLE_MODAL: "".concat(ACTION_PREFIX, "TOGGLE_MODAL"),
  SHOW_EXPORT_DROPDOWN: "".concat(ACTION_PREFIX, "SHOW_EXPORT_DROPDOWN"),
  HIDE_EXPORT_DROPDOWN: "".concat(ACTION_PREFIX, "HIDE_EXPORT_DROPDOWN"),
  OPEN_DELETE_MODAL: "".concat(ACTION_PREFIX, "OPEN_DELETE_MODAL"),
  TOGGLE_MAP_CONTROL: "".concat(ACTION_PREFIX, "TOGGLE_MAP_CONTROL"),
  ADD_NOTIFICATION: "".concat(ACTION_PREFIX, "ADD_NOTIFICATION"),
  REMOVE_NOTIFICATION: "".concat(ACTION_PREFIX, "REMOVE_NOTIFICATION"),
  SET_LOCALE: "".concat(ACTION_PREFIX, "SET_LOCALE"),
  // uiState > export image
  SET_EXPORT_IMAGE_SETTING: "".concat(ACTION_PREFIX, "SET_EXPORT_IMAGE_SETTING"),
  START_EXPORTING_IMAGE: "".concat(ACTION_PREFIX, "START_EXPORTING_IMAGE"),
  SET_EXPORT_IMAGE_DATA_URI: "".concat(ACTION_PREFIX, "SET_EXPORT_IMAGE_DATA_URI"),
  SET_EXPORT_IMAGE_ERROR: "".concat(ACTION_PREFIX, "SET_EXPORT_IMAGE_ERROR"),
  CLEANUP_EXPORT_IMAGE: "".concat(ACTION_PREFIX, "CLEANUP_EXPORT_IMAGE"),
  // uiState > export data
  SET_EXPORT_SELECTED_DATASET: "".concat(ACTION_PREFIX, "SET_EXPORT_SELECTED_DATASET"),
  SET_EXPORT_DATA_TYPE: "".concat(ACTION_PREFIX, "SET_EXPORT_DATA_TYPE"),
  SET_EXPORT_FILTERED: "".concat(ACTION_PREFIX, "SET_EXPORT_FILTERED"),
  SET_EXPORT_DATA: "".concat(ACTION_PREFIX, "SET_EXPORT_DATA"),
  // uiState > export map
  SET_EXPORT_MAP_FORMAT: "".concat(ACTION_PREFIX, "SET_EXPORT_MAP_FORMAT"),
  SET_USER_MAPBOX_ACCESS_TOKEN: "".concat(ACTION_PREFIX, "SET_USER_MAPBOX_ACCESS_TOKEN"),
  SET_EXPORT_MAP_HTML_MODE: "".concat(ACTION_PREFIX, "SET_EXPORT_MAP_HTML_MODE"),
  // uiState > editor
  SET_EDITOR_MODE: "".concat(ACTION_PREFIX, "SET_EDITOR_MODE"),
  SET_SELECTED_FEATURE: "".concat(ACTION_PREFIX, "SET_SELECTED_FEATURE"),
  // all
  INIT: "".concat(ACTION_PREFIX, "INIT"),
  ADD_DATA_TO_MAP: "".concat(ACTION_PREFIX, "ADD_DATA_TO_MAP"),
  RECEIVE_MAP_CONFIG: "".concat(ACTION_PREFIX, "RECEIVE_MAP_CONFIG"),
  RESET_MAP_CONFIG: "".concat(ACTION_PREFIX, "RESET_MAP_CONFIG"),
  // geo-operations
  SET_FEATURES: "".concat(ACTION_PREFIX, "SET_FEATURES"),
  SET_POLYGON_FILTER_LAYER: "".concat(ACTION_PREFIX, "SET_POLYGON_FILTER_LAYER"),
  DELETE_FEATURE: "".concat(ACTION_PREFIX, "DELETE_FEATURE"),
  TOGGLE_EDITOR_VISIBILITY: "".concat(ACTION_PREFIX, "TOGGLE_EDITOR_VISIBILITY")
};
var _default = ActionTypes;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25zdGFudHMvYWN0aW9uLXR5cGVzLmpzIl0sIm5hbWVzIjpbIkFDVElPTl9QUkVGSVgiLCJBY3Rpb25UeXBlcyIsIlJFR0lTVEVSX0VOVFJZIiwiREVMRVRFX0VOVFJZIiwiUkVOQU1FX0VOVFJZIiwiQUREX0RBVEEiLCJBRERfRklMVEVSIiwiQUREX0xBWUVSIiwiSU5URVJBQ1RJT05fQ09ORklHX0NIQU5HRSIsIkxBWUVSX0NPTkZJR19DSEFOR0UiLCJMQVlFUl9WSVNVQUxfQ0hBTk5FTF9DSEFOR0UiLCJMQVlFUl9UWVBFX0NIQU5HRSIsIkxBWUVSX1ZJU19DT05GSUdfQ0hBTkdFIiwiTEFZRVJfVEVYVF9MQUJFTF9DSEFOR0UiLCJMQVlFUl9IT1ZFUiIsIkxBWUVSX0NMSUNLIiwiTUFQX0NMSUNLIiwiTU9VU0VfTU9WRSIsIlJFTU9WRV9GSUxURVIiLCJSRU1PVkVfTEFZRVIiLCJSRU1PVkVfREFUQVNFVCIsIlJFT1JERVJfTEFZRVIiLCJTRVRfRklMVEVSIiwiU0hPV19EQVRBU0VUX1RBQkxFIiwiVVBEQVRFX0xBWUVSX0JMRU5ESU5HIiwiVVBEQVRFX1ZJU19EQVRBIiwiVE9HR0xFX0ZJTFRFUl9BTklNQVRJT04iLCJVUERBVEVfRklMVEVSX0FOSU1BVElPTl9TUEVFRCIsIlBMQVlfQU5JTUFUSU9OIiwiVVBEQVRFX0FOSU1BVElPTl9USU1FIiwiVVBEQVRFX0FOSU1BVElPTl9TUEVFRCIsIlVQREFURV9MQVlFUl9BTklNQVRJT05fU1BFRUQiLCJUT0dHTEVfTEFZRVJfQ09ORklHX0FDVElWRSIsIkVOTEFSR0VfRklMVEVSIiwiVE9HR0xFX0ZJTFRFUl9GRUFUVVJFIiwiVE9HR0xFX0xBWUVSX0ZPUl9NQVAiLCJTRVRfRklMVEVSX1BMT1QiLCJMT0FEX0ZJTEVTIiwiTE9BRF9ORVhUX0ZJTEUiLCJMT0FEX0ZJTEVTX0VSUiIsIkxPQURfRklMRVNfU1VDQ0VTUyIsIkxBWUVSX0NPTE9SX1VJX0NIQU5HRSIsIlRPR0dMRV9GRUFUVVJFX0xBWUVSIiwiQVBQTFlfQ1BVX0ZJTFRFUiIsIlNFVF9NQVBfSU5GTyIsIlNPUlRfVEFCTEVfQ09MVU1OIiwiUElOX1RBQkxFX0NPTFVNTiIsIkNPUFlfVEFCTEVfQ09MVU1OIiwiVVBEQVRFX01BUCIsIkZJVF9CT1VORFMiLCJUT0dHTEVfUEVSU1BFQ1RJVkUiLCJUT0dHTEVfU1BMSVRfTUFQIiwiVE9HR0xFX0ZVTExTQ1JFRU4iLCJNQVBfQ09ORklHX0NIQU5HRSIsIlNFVF9ERUZBVUxUX01BUF9TVFlMRSIsIk1BUF9TVFlMRV9DSEFOR0UiLCJMT0FEX01BUF9TVFlMRVMiLCJMT0FEX01BUF9TVFlMRV9FUlIiLCJJTlBVVF9NQVBfU1RZTEUiLCJMT0FEX0NVU1RPTV9NQVBfU1RZTEUiLCJBRERfQ1VTVE9NX01BUF9TVFlMRSIsIlJFUVVFU1RfTUFQX1NUWUxFUyIsIlNFVF8zRF9CVUlMRElOR19DT0xPUiIsIlRPR0dMRV9TSURFX1BBTkVMIiwiVE9HR0xFX01PREFMIiwiU0hPV19FWFBPUlRfRFJPUERPV04iLCJISURFX0VYUE9SVF9EUk9QRE9XTiIsIk9QRU5fREVMRVRFX01PREFMIiwiVE9HR0xFX01BUF9DT05UUk9MIiwiQUREX05PVElGSUNBVElPTiIsIlJFTU9WRV9OT1RJRklDQVRJT04iLCJTRVRfTE9DQUxFIiwiU0VUX0VYUE9SVF9JTUFHRV9TRVRUSU5HIiwiU1RBUlRfRVhQT1JUSU5HX0lNQUdFIiwiU0VUX0VYUE9SVF9JTUFHRV9EQVRBX1VSSSIsIlNFVF9FWFBPUlRfSU1BR0VfRVJST1IiLCJDTEVBTlVQX0VYUE9SVF9JTUFHRSIsIlNFVF9FWFBPUlRfU0VMRUNURURfREFUQVNFVCIsIlNFVF9FWFBPUlRfREFUQV9UWVBFIiwiU0VUX0VYUE9SVF9GSUxURVJFRCIsIlNFVF9FWFBPUlRfREFUQSIsIlNFVF9FWFBPUlRfTUFQX0ZPUk1BVCIsIlNFVF9VU0VSX01BUEJPWF9BQ0NFU1NfVE9LRU4iLCJTRVRfRVhQT1JUX01BUF9IVE1MX01PREUiLCJTRVRfRURJVE9SX01PREUiLCJTRVRfU0VMRUNURURfRkVBVFVSRSIsIklOSVQiLCJBRERfREFUQV9UT19NQVAiLCJSRUNFSVZFX01BUF9DT05GSUciLCJSRVNFVF9NQVBfQ09ORklHIiwiU0VUX0ZFQVRVUkVTIiwiU0VUX1BPTFlHT05fRklMVEVSX0xBWUVSIiwiREVMRVRFX0ZFQVRVUkUiLCJUT0dHTEVfRURJVE9SX1ZJU0lCSUxJVFkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRU8sSUFBTUEsYUFBYSxHQUFHLGNBQXRCO0FBRVA7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBOEJBLElBQU1DLFdBQVcsR0FBRztBQUNsQjtBQUNBQyxFQUFBQSxjQUFjLFlBQUtGLGFBQUwsbUJBRkk7QUFHbEJHLEVBQUFBLFlBQVksWUFBS0gsYUFBTCxpQkFITTtBQUlsQkksRUFBQUEsWUFBWSxZQUFLSixhQUFMLGlCQUpNO0FBTWxCO0FBQ0FLLEVBQUFBLFFBQVEsWUFBS0wsYUFBTCxhQVBVO0FBUWxCTSxFQUFBQSxVQUFVLFlBQUtOLGFBQUwsZUFSUTtBQVNsQk8sRUFBQUEsU0FBUyxZQUFLUCxhQUFMLGNBVFM7QUFVbEJRLEVBQUFBLHlCQUF5QixZQUFLUixhQUFMLDhCQVZQO0FBV2xCUyxFQUFBQSxtQkFBbUIsWUFBS1QsYUFBTCx3QkFYRDtBQVlsQlUsRUFBQUEsMkJBQTJCLFlBQUtWLGFBQUwsZ0NBWlQ7QUFhbEJXLEVBQUFBLGlCQUFpQixZQUFLWCxhQUFMLHNCQWJDO0FBY2xCWSxFQUFBQSx1QkFBdUIsWUFBS1osYUFBTCw0QkFkTDtBQWVsQmEsRUFBQUEsdUJBQXVCLFlBQUtiLGFBQUwsNEJBZkw7QUFnQmxCYyxFQUFBQSxXQUFXLFlBQUtkLGFBQUwsZ0JBaEJPO0FBaUJsQmUsRUFBQUEsV0FBVyxZQUFLZixhQUFMLGdCQWpCTztBQWtCbEJnQixFQUFBQSxTQUFTLFlBQUtoQixhQUFMLGNBbEJTO0FBbUJsQmlCLEVBQUFBLFVBQVUsWUFBS2pCLGFBQUwsZUFuQlE7QUFvQmxCa0IsRUFBQUEsYUFBYSxZQUFLbEIsYUFBTCxrQkFwQks7QUFxQmxCbUIsRUFBQUEsWUFBWSxZQUFLbkIsYUFBTCxpQkFyQk07QUFzQmxCb0IsRUFBQUEsY0FBYyxZQUFLcEIsYUFBTCxtQkF0Qkk7QUF1QmxCcUIsRUFBQUEsYUFBYSxZQUFLckIsYUFBTCxrQkF2Qks7QUF3QmxCc0IsRUFBQUEsVUFBVSxZQUFLdEIsYUFBTCxlQXhCUTtBQXlCbEJ1QixFQUFBQSxrQkFBa0IsWUFBS3ZCLGFBQUwsdUJBekJBO0FBMEJsQndCLEVBQUFBLHFCQUFxQixZQUFLeEIsYUFBTCwwQkExQkg7QUEyQmxCeUIsRUFBQUEsZUFBZSxZQUFLekIsYUFBTCxvQkEzQkc7QUE0QmxCMEIsRUFBQUEsdUJBQXVCLFlBQUsxQixhQUFMLDRCQTVCTDtBQTZCbEIyQixFQUFBQSw2QkFBNkIsWUFBSzNCLGFBQUwsa0NBN0JYO0FBOEJsQjRCLEVBQUFBLGNBQWMsWUFBSzVCLGFBQUwsbUJBOUJJO0FBK0JsQjZCLEVBQUFBLHFCQUFxQixZQUFLN0IsYUFBTCwwQkEvQkg7QUFnQ2xCOEIsRUFBQUEsc0JBQXNCLFlBQUs5QixhQUFMLDJCQWhDSjtBQWlDbEIrQixFQUFBQSw0QkFBNEIsWUFBSy9CLGFBQUwsaUNBakNWO0FBa0NsQmdDLEVBQUFBLDBCQUEwQixZQUFLaEMsYUFBTCwrQkFsQ1I7QUFtQ2xCaUMsRUFBQUEsY0FBYyxZQUFLakMsYUFBTCxtQkFuQ0k7QUFvQ2xCa0MsRUFBQUEscUJBQXFCLFlBQUtsQyxhQUFMLDBCQXBDSDtBQXFDbEJtQyxFQUFBQSxvQkFBb0IsWUFBS25DLGFBQUwseUJBckNGO0FBc0NsQm9DLEVBQUFBLGVBQWUsWUFBS3BDLGFBQUwsb0JBdENHO0FBdUNsQnFDLEVBQUFBLFVBQVUsWUFBS3JDLGFBQUwsZUF2Q1E7QUF3Q2xCc0MsRUFBQUEsY0FBYyxZQUFLdEMsYUFBTCxtQkF4Q0k7QUF5Q2xCdUMsRUFBQUEsY0FBYyxZQUFLdkMsYUFBTCxtQkF6Q0k7QUEwQ2xCd0MsRUFBQUEsa0JBQWtCLFlBQUt4QyxhQUFMLHVCQTFDQTtBQTJDbEJ5QyxFQUFBQSxxQkFBcUIsWUFBS3pDLGFBQUwsMEJBM0NIO0FBNENsQjBDLEVBQUFBLG9CQUFvQixZQUFLMUMsYUFBTCx5QkE1Q0Y7QUE2Q2xCMkMsRUFBQUEsZ0JBQWdCLFlBQUszQyxhQUFMLHFCQTdDRTtBQThDbEI0QyxFQUFBQSxZQUFZLFlBQUs1QyxhQUFMLGlCQTlDTTtBQStDbEI2QyxFQUFBQSxpQkFBaUIsWUFBSzdDLGFBQUwsc0JBL0NDO0FBZ0RsQjhDLEVBQUFBLGdCQUFnQixZQUFLOUMsYUFBTCxxQkFoREU7QUFpRGxCK0MsRUFBQUEsaUJBQWlCLFlBQUsvQyxhQUFMLHNCQWpEQztBQW1EbEI7QUFDQWdELEVBQUFBLFVBQVUsWUFBS2hELGFBQUwsZUFwRFE7QUFxRGxCaUQsRUFBQUEsVUFBVSxZQUFLakQsYUFBTCxlQXJEUTtBQXNEbEJrRCxFQUFBQSxrQkFBa0IsWUFBS2xELGFBQUwsdUJBdERBO0FBdURsQm1ELEVBQUFBLGdCQUFnQixZQUFLbkQsYUFBTCxxQkF2REU7QUF3RGxCb0QsRUFBQUEsaUJBQWlCLFlBQUtwRCxhQUFMLHNCQXhEQztBQTBEbEI7QUFDQXFELEVBQUFBLGlCQUFpQixZQUFLckQsYUFBTCxzQkEzREM7QUE0RGxCc0QsRUFBQUEscUJBQXFCLFlBQUt0RCxhQUFMLDBCQTVESDtBQTZEbEJ1RCxFQUFBQSxnQkFBZ0IsWUFBS3ZELGFBQUwscUJBN0RFO0FBOERsQndELEVBQUFBLGVBQWUsWUFBS3hELGFBQUwsb0JBOURHO0FBK0RsQnlELEVBQUFBLGtCQUFrQixZQUFLekQsYUFBTCx1QkEvREE7QUFnRWxCMEQsRUFBQUEsZUFBZSxZQUFLMUQsYUFBTCxvQkFoRUc7QUFpRWxCMkQsRUFBQUEscUJBQXFCLFlBQUszRCxhQUFMLDBCQWpFSDtBQWtFbEI0RCxFQUFBQSxvQkFBb0IsWUFBSzVELGFBQUwseUJBbEVGO0FBbUVsQjZELEVBQUFBLGtCQUFrQixZQUFLN0QsYUFBTCx1QkFuRUE7QUFvRWxCOEQsRUFBQUEscUJBQXFCLFlBQUs5RCxhQUFMLDBCQXBFSDtBQXNFbEI7QUFDQStELEVBQUFBLGlCQUFpQixZQUFLL0QsYUFBTCxzQkF2RUM7QUF3RWxCZ0UsRUFBQUEsWUFBWSxZQUFLaEUsYUFBTCxpQkF4RU07QUF5RWxCaUUsRUFBQUEsb0JBQW9CLFlBQUtqRSxhQUFMLHlCQXpFRjtBQTBFbEJrRSxFQUFBQSxvQkFBb0IsWUFBS2xFLGFBQUwseUJBMUVGO0FBMkVsQm1FLEVBQUFBLGlCQUFpQixZQUFLbkUsYUFBTCxzQkEzRUM7QUE0RWxCb0UsRUFBQUEsa0JBQWtCLFlBQUtwRSxhQUFMLHVCQTVFQTtBQTZFbEJxRSxFQUFBQSxnQkFBZ0IsWUFBS3JFLGFBQUwscUJBN0VFO0FBOEVsQnNFLEVBQUFBLG1CQUFtQixZQUFLdEUsYUFBTCx3QkE5RUQ7QUErRWxCdUUsRUFBQUEsVUFBVSxZQUFLdkUsYUFBTCxlQS9FUTtBQWlGbEI7QUFDQXdFLEVBQUFBLHdCQUF3QixZQUFLeEUsYUFBTCw2QkFsRk47QUFtRmxCeUUsRUFBQUEscUJBQXFCLFlBQUt6RSxhQUFMLDBCQW5GSDtBQW9GbEIwRSxFQUFBQSx5QkFBeUIsWUFBSzFFLGFBQUwsOEJBcEZQO0FBcUZsQjJFLEVBQUFBLHNCQUFzQixZQUFLM0UsYUFBTCwyQkFyRko7QUFzRmxCNEUsRUFBQUEsb0JBQW9CLFlBQUs1RSxhQUFMLHlCQXRGRjtBQXdGbEI7QUFDQTZFLEVBQUFBLDJCQUEyQixZQUFLN0UsYUFBTCxnQ0F6RlQ7QUEwRmxCOEUsRUFBQUEsb0JBQW9CLFlBQUs5RSxhQUFMLHlCQTFGRjtBQTJGbEIrRSxFQUFBQSxtQkFBbUIsWUFBSy9FLGFBQUwsd0JBM0ZEO0FBNEZsQmdGLEVBQUFBLGVBQWUsWUFBS2hGLGFBQUwsb0JBNUZHO0FBOEZsQjtBQUNBaUYsRUFBQUEscUJBQXFCLFlBQUtqRixhQUFMLDBCQS9GSDtBQWdHbEJrRixFQUFBQSw0QkFBNEIsWUFBS2xGLGFBQUwsaUNBaEdWO0FBaUdsQm1GLEVBQUFBLHdCQUF3QixZQUFLbkYsYUFBTCw2QkFqR047QUFtR2xCO0FBQ0FvRixFQUFBQSxlQUFlLFlBQUtwRixhQUFMLG9CQXBHRztBQXFHbEJxRixFQUFBQSxvQkFBb0IsWUFBS3JGLGFBQUwseUJBckdGO0FBdUdsQjtBQUNBc0YsRUFBQUEsSUFBSSxZQUFLdEYsYUFBTCxTQXhHYztBQXlHbEJ1RixFQUFBQSxlQUFlLFlBQUt2RixhQUFMLG9CQXpHRztBQTBHbEJ3RixFQUFBQSxrQkFBa0IsWUFBS3hGLGFBQUwsdUJBMUdBO0FBMkdsQnlGLEVBQUFBLGdCQUFnQixZQUFLekYsYUFBTCxxQkEzR0U7QUE2R2xCO0FBQ0EwRixFQUFBQSxZQUFZLFlBQUsxRixhQUFMLGlCQTlHTTtBQStHbEIyRixFQUFBQSx3QkFBd0IsWUFBSzNGLGFBQUwsNkJBL0dOO0FBZ0hsQjRGLEVBQUFBLGNBQWMsWUFBSzVGLGFBQUwsbUJBaEhJO0FBaUhsQjZGLEVBQUFBLHdCQUF3QixZQUFLN0YsYUFBTDtBQWpITixDQUFwQjtlQW9IZUMsVyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmV4cG9ydCBjb25zdCBBQ1RJT05fUFJFRklYID0gJ0BAa2VwbGVyLmdsLyc7XG5cbi8qKlxuICogS2VwbGVyLmdsIGFjdGlvbiB0eXBlcywgY2FuIGJlIGxpc3RlbmVkIGJ5IHJlZHVjZXJzIHRvIHBlcmZvcm0gYWRkaXRpb25hbCB0YXNrcyB3aGVuZXZlciBhbiBhY3Rpb24gaXMgY2FsbGVkIGluIGtlcGxlci5nbFxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7T2JqZWN0fVxuICogQHB1YmxpY1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBzdG9yZS5qc1xuICogaW1wb3J0IHtoYW5kbGVBY3Rpb25zfSBmcm9tICdyZWR1eC1hY3Rpb25zJztcbiAqIGltcG9ydCB7Y3JlYXRlU3RvcmUsIGNvbWJpbmVSZWR1Y2VycywgYXBwbHlNaWRkbGV3YXJlfSBmcm9tICdyZWR1eCc7XG4gKiBpbXBvcnQge3Rhc2tNaWRkbGV3YXJlfSBmcm9tICdyZWFjdC1wYWxtL3Rhc2tzJztcbiAqXG4gKiBpbXBvcnQga2VwbGVyR2xSZWR1Y2VyIGZyb20gJ2tlcGxlci5nbC9yZWR1Y2Vycyc7XG4gKiBpbXBvcnQge0FjdGlvblR5cGVzfSBmcm9tICdrZXBsZXIuZ2wvYWN0aW9ucyc7XG4gKlxuICogY29uc3QgYXBwUmVkdWNlciA9IGhhbmRsZUFjdGlvbnMoe1xuICogICAvLyBsaXN0ZW4gb24ga2VwbGVyLmdsIG1hcCB1cGRhdGUgYWN0aW9uIHRvIHN0b3JlIGEgY29weSBvZiB2aWV3cG9ydCBpbiBhcHAgc3RhdGVcbiAqICAgW0FjdGlvblR5cGVzLlVQREFURV9NQVBdOiAoc3RhdGUsIGFjdGlvbikgPT4gKHtcbiAqICAgICAuLi5zdGF0ZSxcbiAqICAgICB2aWV3cG9ydDogYWN0aW9uLnBheWxvYWRcbiAqICAgfSksXG4gKiB9LCB7fSk7XG4gKlxuICogY29uc3QgcmVkdWNlcnMgPSBjb21iaW5lUmVkdWNlcnMoe1xuICogICBhcHA6IGFwcFJlZHVjZXIsXG4gKiAgIGtlcGxlckdsOiBrZXBsZXJHbFJlZHVjZXJcbiAqIH0pO1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0b3JlKHJlZHVjZXJzLCB7fSwgYXBwbHlNaWRkbGV3YXJlKHRhc2tNaWRkbGV3YXJlKSlcbiAqL1xuY29uc3QgQWN0aW9uVHlwZXMgPSB7XG4gIC8vIGlkZW50aXR5IGFjdGlvblxuICBSRUdJU1RFUl9FTlRSWTogYCR7QUNUSU9OX1BSRUZJWH1SRUdJU1RFUl9FTlRSWWAsXG4gIERFTEVURV9FTlRSWTogYCR7QUNUSU9OX1BSRUZJWH1ERUxFVEVfRU5UUllgLFxuICBSRU5BTUVfRU5UUlk6IGAke0FDVElPTl9QUkVGSVh9UkVOQU1FX0VOVFJZYCxcblxuICAvLyB2aXNTdGF0ZVxuICBBRERfREFUQTogYCR7QUNUSU9OX1BSRUZJWH1BRERfREFUQWAsXG4gIEFERF9GSUxURVI6IGAke0FDVElPTl9QUkVGSVh9QUREX0ZJTFRFUmAsXG4gIEFERF9MQVlFUjogYCR7QUNUSU9OX1BSRUZJWH1BRERfTEFZRVJgLFxuICBJTlRFUkFDVElPTl9DT05GSUdfQ0hBTkdFOiBgJHtBQ1RJT05fUFJFRklYfUlOVEVSQUNUSU9OX0NPTkZJR19DSEFOR0VgLFxuICBMQVlFUl9DT05GSUdfQ0hBTkdFOiBgJHtBQ1RJT05fUFJFRklYfUxBWUVSX0NPTkZJR19DSEFOR0VgLFxuICBMQVlFUl9WSVNVQUxfQ0hBTk5FTF9DSEFOR0U6IGAke0FDVElPTl9QUkVGSVh9TEFZRVJfVklTVUFMX0NIQU5ORUxfQ0hBTkdFYCxcbiAgTEFZRVJfVFlQRV9DSEFOR0U6IGAke0FDVElPTl9QUkVGSVh9TEFZRVJfVFlQRV9DSEFOR0VgLFxuICBMQVlFUl9WSVNfQ09ORklHX0NIQU5HRTogYCR7QUNUSU9OX1BSRUZJWH1MQVlFUl9WSVNfQ09ORklHX0NIQU5HRWAsXG4gIExBWUVSX1RFWFRfTEFCRUxfQ0hBTkdFOiBgJHtBQ1RJT05fUFJFRklYfUxBWUVSX1RFWFRfTEFCRUxfQ0hBTkdFYCxcbiAgTEFZRVJfSE9WRVI6IGAke0FDVElPTl9QUkVGSVh9TEFZRVJfSE9WRVJgLFxuICBMQVlFUl9DTElDSzogYCR7QUNUSU9OX1BSRUZJWH1MQVlFUl9DTElDS2AsXG4gIE1BUF9DTElDSzogYCR7QUNUSU9OX1BSRUZJWH1NQVBfQ0xJQ0tgLFxuICBNT1VTRV9NT1ZFOiBgJHtBQ1RJT05fUFJFRklYfU1PVVNFX01PVkVgLFxuICBSRU1PVkVfRklMVEVSOiBgJHtBQ1RJT05fUFJFRklYfVJFTU9WRV9GSUxURVJgLFxuICBSRU1PVkVfTEFZRVI6IGAke0FDVElPTl9QUkVGSVh9UkVNT1ZFX0xBWUVSYCxcbiAgUkVNT1ZFX0RBVEFTRVQ6IGAke0FDVElPTl9QUkVGSVh9UkVNT1ZFX0RBVEFTRVRgLFxuICBSRU9SREVSX0xBWUVSOiBgJHtBQ1RJT05fUFJFRklYfVJFT1JERVJfTEFZRVJgLFxuICBTRVRfRklMVEVSOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9GSUxURVJgLFxuICBTSE9XX0RBVEFTRVRfVEFCTEU6IGAke0FDVElPTl9QUkVGSVh9U0hPV19EQVRBU0VUX1RBQkxFYCxcbiAgVVBEQVRFX0xBWUVSX0JMRU5ESU5HOiBgJHtBQ1RJT05fUFJFRklYfVVQREFURV9MQVlFUl9CTEVORElOR2AsXG4gIFVQREFURV9WSVNfREFUQTogYCR7QUNUSU9OX1BSRUZJWH1VUERBVEVfVklTX0RBVEFgLFxuICBUT0dHTEVfRklMVEVSX0FOSU1BVElPTjogYCR7QUNUSU9OX1BSRUZJWH1UT0dHTEVfRklMVEVSX0FOSU1BVElPTmAsXG4gIFVQREFURV9GSUxURVJfQU5JTUFUSU9OX1NQRUVEOiBgJHtBQ1RJT05fUFJFRklYfVVQREFURV9GSUxURVJfQU5JTUFUSU9OX1NQRUVEYCxcbiAgUExBWV9BTklNQVRJT046IGAke0FDVElPTl9QUkVGSVh9UExBWV9BTklNQVRJT05gLFxuICBVUERBVEVfQU5JTUFUSU9OX1RJTUU6IGAke0FDVElPTl9QUkVGSVh9VVBEQVRFX0FOSU1BVElPTl9USU1FYCxcbiAgVVBEQVRFX0FOSU1BVElPTl9TUEVFRDogYCR7QUNUSU9OX1BSRUZJWH1VUERBVEVfQU5JTUFUSU9OX1NQRUVEYCxcbiAgVVBEQVRFX0xBWUVSX0FOSU1BVElPTl9TUEVFRDogYCR7QUNUSU9OX1BSRUZJWH1VUERBVEVfTEFZRVJfQU5JTUFUSU9OX1NQRUVEYCxcbiAgVE9HR0xFX0xBWUVSX0NPTkZJR19BQ1RJVkU6IGAke0FDVElPTl9QUkVGSVh9VE9HR0xFX0xBWUVSX0NPTkZJR19BQ1RJVkVgLFxuICBFTkxBUkdFX0ZJTFRFUjogYCR7QUNUSU9OX1BSRUZJWH1FTkxBUkdFX0ZJTFRFUmAsXG4gIFRPR0dMRV9GSUxURVJfRkVBVFVSRTogYCR7QUNUSU9OX1BSRUZJWH1UT0dHTEVfRklMVEVSX0ZFQVRVUkVgLFxuICBUT0dHTEVfTEFZRVJfRk9SX01BUDogYCR7QUNUSU9OX1BSRUZJWH1UT0dHTEVfTEFZRVJfRk9SX01BUGAsXG4gIFNFVF9GSUxURVJfUExPVDogYCR7QUNUSU9OX1BSRUZJWH1TRVRfRklMVEVSX1BMT1RgLFxuICBMT0FEX0ZJTEVTOiBgJHtBQ1RJT05fUFJFRklYfUxPQURfRklMRVNgLFxuICBMT0FEX05FWFRfRklMRTogYCR7QUNUSU9OX1BSRUZJWH1MT0FEX05FWFRfRklMRWAsXG4gIExPQURfRklMRVNfRVJSOiBgJHtBQ1RJT05fUFJFRklYfUxPQURfRklMRVNfRVJSYCxcbiAgTE9BRF9GSUxFU19TVUNDRVNTOiBgJHtBQ1RJT05fUFJFRklYfUxPQURfRklMRVNfU1VDQ0VTU2AsXG4gIExBWUVSX0NPTE9SX1VJX0NIQU5HRTogYCR7QUNUSU9OX1BSRUZJWH1MQVlFUl9DT0xPUl9VSV9DSEFOR0VgLFxuICBUT0dHTEVfRkVBVFVSRV9MQVlFUjogYCR7QUNUSU9OX1BSRUZJWH1UT0dHTEVfRkVBVFVSRV9MQVlFUmAsXG4gIEFQUExZX0NQVV9GSUxURVI6IGAke0FDVElPTl9QUkVGSVh9QVBQTFlfQ1BVX0ZJTFRFUmAsXG4gIFNFVF9NQVBfSU5GTzogYCR7QUNUSU9OX1BSRUZJWH1TRVRfTUFQX0lORk9gLFxuICBTT1JUX1RBQkxFX0NPTFVNTjogYCR7QUNUSU9OX1BSRUZJWH1TT1JUX1RBQkxFX0NPTFVNTmAsXG4gIFBJTl9UQUJMRV9DT0xVTU46IGAke0FDVElPTl9QUkVGSVh9UElOX1RBQkxFX0NPTFVNTmAsXG4gIENPUFlfVEFCTEVfQ09MVU1OOiBgJHtBQ1RJT05fUFJFRklYfUNPUFlfVEFCTEVfQ09MVU1OYCxcblxuICAvLyBtYXBTdGF0ZVxuICBVUERBVEVfTUFQOiBgJHtBQ1RJT05fUFJFRklYfVVQREFURV9NQVBgLFxuICBGSVRfQk9VTkRTOiBgJHtBQ1RJT05fUFJFRklYfUZJVF9CT1VORFNgLFxuICBUT0dHTEVfUEVSU1BFQ1RJVkU6IGAke0FDVElPTl9QUkVGSVh9VE9HR0xFX1BFUlNQRUNUSVZFYCxcbiAgVE9HR0xFX1NQTElUX01BUDogYCR7QUNUSU9OX1BSRUZJWH1UT0dHTEVfU1BMSVRfTUFQYCxcbiAgVE9HR0xFX0ZVTExTQ1JFRU46IGAke0FDVElPTl9QUkVGSVh9VE9HR0xFX0ZVTExTQ1JFRU5gLFxuXG4gIC8vIG1hcFN0eWxlXG4gIE1BUF9DT05GSUdfQ0hBTkdFOiBgJHtBQ1RJT05fUFJFRklYfU1BUF9DT05GSUdfQ0hBTkdFYCxcbiAgU0VUX0RFRkFVTFRfTUFQX1NUWUxFOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9ERUZBVUxUX01BUF9TVFlMRWAsXG4gIE1BUF9TVFlMRV9DSEFOR0U6IGAke0FDVElPTl9QUkVGSVh9TUFQX1NUWUxFX0NIQU5HRWAsXG4gIExPQURfTUFQX1NUWUxFUzogYCR7QUNUSU9OX1BSRUZJWH1MT0FEX01BUF9TVFlMRVNgLFxuICBMT0FEX01BUF9TVFlMRV9FUlI6IGAke0FDVElPTl9QUkVGSVh9TE9BRF9NQVBfU1RZTEVfRVJSYCxcbiAgSU5QVVRfTUFQX1NUWUxFOiBgJHtBQ1RJT05fUFJFRklYfUlOUFVUX01BUF9TVFlMRWAsXG4gIExPQURfQ1VTVE9NX01BUF9TVFlMRTogYCR7QUNUSU9OX1BSRUZJWH1MT0FEX0NVU1RPTV9NQVBfU1RZTEVgLFxuICBBRERfQ1VTVE9NX01BUF9TVFlMRTogYCR7QUNUSU9OX1BSRUZJWH1BRERfQ1VTVE9NX01BUF9TVFlMRWAsXG4gIFJFUVVFU1RfTUFQX1NUWUxFUzogYCR7QUNUSU9OX1BSRUZJWH1SRVFVRVNUX01BUF9TVFlMRVNgLFxuICBTRVRfM0RfQlVJTERJTkdfQ09MT1I6IGAke0FDVElPTl9QUkVGSVh9U0VUXzNEX0JVSUxESU5HX0NPTE9SYCxcblxuICAvLyB1aVN0YXRlXG4gIFRPR0dMRV9TSURFX1BBTkVMOiBgJHtBQ1RJT05fUFJFRklYfVRPR0dMRV9TSURFX1BBTkVMYCxcbiAgVE9HR0xFX01PREFMOiBgJHtBQ1RJT05fUFJFRklYfVRPR0dMRV9NT0RBTGAsXG4gIFNIT1dfRVhQT1JUX0RST1BET1dOOiBgJHtBQ1RJT05fUFJFRklYfVNIT1dfRVhQT1JUX0RST1BET1dOYCxcbiAgSElERV9FWFBPUlRfRFJPUERPV046IGAke0FDVElPTl9QUkVGSVh9SElERV9FWFBPUlRfRFJPUERPV05gLFxuICBPUEVOX0RFTEVURV9NT0RBTDogYCR7QUNUSU9OX1BSRUZJWH1PUEVOX0RFTEVURV9NT0RBTGAsXG4gIFRPR0dMRV9NQVBfQ09OVFJPTDogYCR7QUNUSU9OX1BSRUZJWH1UT0dHTEVfTUFQX0NPTlRST0xgLFxuICBBRERfTk9USUZJQ0FUSU9OOiBgJHtBQ1RJT05fUFJFRklYfUFERF9OT1RJRklDQVRJT05gLFxuICBSRU1PVkVfTk9USUZJQ0FUSU9OOiBgJHtBQ1RJT05fUFJFRklYfVJFTU9WRV9OT1RJRklDQVRJT05gLFxuICBTRVRfTE9DQUxFOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9MT0NBTEVgLFxuXG4gIC8vIHVpU3RhdGUgPiBleHBvcnQgaW1hZ2VcbiAgU0VUX0VYUE9SVF9JTUFHRV9TRVRUSU5HOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9FWFBPUlRfSU1BR0VfU0VUVElOR2AsXG4gIFNUQVJUX0VYUE9SVElOR19JTUFHRTogYCR7QUNUSU9OX1BSRUZJWH1TVEFSVF9FWFBPUlRJTkdfSU1BR0VgLFxuICBTRVRfRVhQT1JUX0lNQUdFX0RBVEFfVVJJOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9FWFBPUlRfSU1BR0VfREFUQV9VUklgLFxuICBTRVRfRVhQT1JUX0lNQUdFX0VSUk9SOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9FWFBPUlRfSU1BR0VfRVJST1JgLFxuICBDTEVBTlVQX0VYUE9SVF9JTUFHRTogYCR7QUNUSU9OX1BSRUZJWH1DTEVBTlVQX0VYUE9SVF9JTUFHRWAsXG5cbiAgLy8gdWlTdGF0ZSA+IGV4cG9ydCBkYXRhXG4gIFNFVF9FWFBPUlRfU0VMRUNURURfREFUQVNFVDogYCR7QUNUSU9OX1BSRUZJWH1TRVRfRVhQT1JUX1NFTEVDVEVEX0RBVEFTRVRgLFxuICBTRVRfRVhQT1JUX0RBVEFfVFlQRTogYCR7QUNUSU9OX1BSRUZJWH1TRVRfRVhQT1JUX0RBVEFfVFlQRWAsXG4gIFNFVF9FWFBPUlRfRklMVEVSRUQ6IGAke0FDVElPTl9QUkVGSVh9U0VUX0VYUE9SVF9GSUxURVJFRGAsXG4gIFNFVF9FWFBPUlRfREFUQTogYCR7QUNUSU9OX1BSRUZJWH1TRVRfRVhQT1JUX0RBVEFgLFxuXG4gIC8vIHVpU3RhdGUgPiBleHBvcnQgbWFwXG4gIFNFVF9FWFBPUlRfTUFQX0ZPUk1BVDogYCR7QUNUSU9OX1BSRUZJWH1TRVRfRVhQT1JUX01BUF9GT1JNQVRgLFxuICBTRVRfVVNFUl9NQVBCT1hfQUNDRVNTX1RPS0VOOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9VU0VSX01BUEJPWF9BQ0NFU1NfVE9LRU5gLFxuICBTRVRfRVhQT1JUX01BUF9IVE1MX01PREU6IGAke0FDVElPTl9QUkVGSVh9U0VUX0VYUE9SVF9NQVBfSFRNTF9NT0RFYCxcblxuICAvLyB1aVN0YXRlID4gZWRpdG9yXG4gIFNFVF9FRElUT1JfTU9ERTogYCR7QUNUSU9OX1BSRUZJWH1TRVRfRURJVE9SX01PREVgLFxuICBTRVRfU0VMRUNURURfRkVBVFVSRTogYCR7QUNUSU9OX1BSRUZJWH1TRVRfU0VMRUNURURfRkVBVFVSRWAsXG5cbiAgLy8gYWxsXG4gIElOSVQ6IGAke0FDVElPTl9QUkVGSVh9SU5JVGAsXG4gIEFERF9EQVRBX1RPX01BUDogYCR7QUNUSU9OX1BSRUZJWH1BRERfREFUQV9UT19NQVBgLFxuICBSRUNFSVZFX01BUF9DT05GSUc6IGAke0FDVElPTl9QUkVGSVh9UkVDRUlWRV9NQVBfQ09ORklHYCxcbiAgUkVTRVRfTUFQX0NPTkZJRzogYCR7QUNUSU9OX1BSRUZJWH1SRVNFVF9NQVBfQ09ORklHYCxcblxuICAvLyBnZW8tb3BlcmF0aW9uc1xuICBTRVRfRkVBVFVSRVM6IGAke0FDVElPTl9QUkVGSVh9U0VUX0ZFQVRVUkVTYCxcbiAgU0VUX1BPTFlHT05fRklMVEVSX0xBWUVSOiBgJHtBQ1RJT05fUFJFRklYfVNFVF9QT0xZR09OX0ZJTFRFUl9MQVlFUmAsXG4gIERFTEVURV9GRUFUVVJFOiBgJHtBQ1RJT05fUFJFRklYfURFTEVURV9GRUFUVVJFYCxcbiAgVE9HR0xFX0VESVRPUl9WSVNJQklMSVRZOiBgJHtBQ1RJT05fUFJFRklYfVRPR0dMRV9FRElUT1JfVklTSUJJTElUWWBcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFjdGlvblR5cGVzO1xuIl19